@model IEnumerable<DDVTracker.Models.Fish>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Fish";
}

<h1>Fish</h1>
@{
    // Only show the create button if the user is signed in and is not a regular user
    if (SignInManager.IsSignedIn(User) && !User.IsInRole(IdentityHelper.User))
    {
        <p>
        <a asp-action="Create" class="btn btn-success">Create New</a>
        </p>
    }
}
<div class="container">
    <div class="row row-cols-auto">
        @foreach (var item in Model)
        {

            <div class="col">
                <div class="card" style="border-color: @item.RippleColor;">
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(item.ImageBase64))
                        {
                            <img src="data:image/jpeg;base64,@item.ImageBase64" width="200" alt="Fish Image" class="img-fluid" />
                        }
                        else
                        {
                            <p>No image available</p>
                        }
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.FishName)</h5>
                        <h6 class="card-subtitle">@Html.DisplayFor(modelItem => item.GameVersion.GameVersionName)</h6>
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#detailsModal" data-fishid="@item.FishId">
                            Details
                        </button>

                        @{
                            // Only show the edit and delete buttons if the user is signed in and is not a regular user
                            if (SignInManager.IsSignedIn(User) && !User.IsInRole(IdentityHelper.User))
                            {
                                <a asp-action="Edit" asp-route-id="@item.FishId" class="btn btn-primary">Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.FishId" class="btn btn-danger">Delete</a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <!-- Modal Structure (moved outside the loop) -->
    <div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailsModalLabel">Fish Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"/>
                </div>
                <div class="modal-body">
                    <!-- Dynamic content will be loaded here -->

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var detailsModal = document.getElementById('detailsModal');
        detailsModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var fishId = button.getAttribute('data-fishid');
            var modalTitle = detailsModal.querySelector('.modal-title');
            var modalBody = detailsModal.querySelector('.modal-body');

            // Update the modal's content.
            modalTitle.textContent = 'Fish Details';
            modalBody.textContent = 'Loading...';

            // Example AJAX call with Fetch API to get fish details
            fetch(`/Fish/Details/${fishId}`)
                .then(response => response.text())
                .then(html => {
                    modalBody.innerHTML = html;
                })
                .catch(error => {
                    modalBody.textContent = 'An error occurred. Please try again.';
                });
        });
    });
</script>