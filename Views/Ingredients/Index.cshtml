@model IEnumerable<DDVTracker.Models.Ingredient>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Ingredients";
}

<h1>Ingredients</h1>
@{
    // Only show the create button if the user is signed in and is not a regular user
    if (SignInManager.IsSignedIn(User) && !User.IsInRole(IdentityHelper.User))
    {
<p>
            <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
    }
}
<table id="modelDisplay" class="table">
    <thead>
        <tr>
            <th>
                Game Version
            </th>
            <th>
                Name
            </th>
            <th>
                Category
            </th>
            <th>
                Buy
            </th>
            <th>
                Sell
            </th>
            <th>
                Energy
            </th>
            <th>
                Grow Time
            </th>
            <th>
                Watering
            </th>
            <th>
                Yields
            </th>
            <th>
                Acquired By
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GameVersion.GameVersionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IngredientName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IngredientCategory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuyPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SellsFor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Energy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GrowTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Water)
                    @{
                        // Only show the edit and delete buttons if the user is signed in and is not a regular user
                        if (SignInManager.IsSignedIn(User) && !User.IsInRole(IdentityHelper.User))
                        {
                            <a asp-action="Edit" asp-route-id="@item.IngredientId" class="btn btn-primary">Edit</a>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-ingredientid="@item.IngredientId">
                                Delete
                            </button>
                        }
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Yield)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Method)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.IngredientId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.IngredientId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.IngredientId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
